#this document explain how java-win-service works.

= Introduction =

First of all let's understand the purpose of java-win-service. This application was built to solve a common problem: Allow JavaSE programs that run through Command Line Interface, to run as Windows Services.

= Instructions =

To use java-win-service the first thing to do is to install it (http://java-win-service.googlecode.com/files/JavaWinServiceSetup.msi).

The second thing is to enter in c:\javawinservice\ folder and edit the jws.properties file. Do not start the service without edit this file. This file has three important properties:

 # servicename=jettyservice 
 # execbatch=c:/myapp/startJavaProcess.bat 
 # lockfile=c:/myapp/myapp.lock 

 * *servicename*: The name that will be used to log in Event Viewer 
 * *execbatch*: The .bat file that will have the initialization command.
 * *lockfile*: A text file that will be create every time that the java program runs. This file must contains the PID number of java process.

 * This is an example of an execbatch property startJavaProcess.bat: 
{{{
cd c:\iptcfg\
"c:\Program Files\java\jre\bin\java" -jar embeddedJettyApp.jar
}}}

 * This is an example of how to make your java program create a .lock file:
{{{
        public void writeLockFile(String filename){
		String prePid = ManagementFactory.getRuntimeMXBean().getName();
		String pid = null;
		for (int i = 0; i < prePid.length(); i++) if(prePid.charAt(i) == '@') pid = prePid.substring(0,i);
		writeTextToFile(filename, pid);
	}
	
	public void writeTextToFile(String filename, String text){
		try {
		    BufferedWriter out = new BufferedWriter(new FileWriter(filename));
		    out.write(text);
		    out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}}}
